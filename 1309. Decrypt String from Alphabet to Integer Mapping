1309. Decrypt String from Alphabet to Integer Mapping

Given a string s formed by digits ('0' - '9') and '#' . We want to map s to English lowercase characters as follows:

Characters ('a' to 'i') are represented by ('1' to '9') respectively.
Characters ('j' to 'z') are represented by ('10#' to '26#') respectively. 
Return the string formed after mapping.

It's guaranteed that a unique mapping will always exist.

Input: s = "10#11#12"
Output: "jkab"
Explanation: "j" -> "10#" , "k" -> "11#" , "a" -> "1" , "b" -> "2".


class Solution {
public:
    string freqAlphabets(string s) {
        string str = "",alphabets="1abcdefghijklmnopqrstuvwxyz";
        for(int i=0;i<s.length();i++)
        {
            if(i+2 <s.length())
            {
                if(s[i+2] == '#')
                {
                    int interim =((int) (s[i++]-'0')) * 10 ;
                        interim += (int) (s[i++] - '0');
                    
                    str += alphabets[interim];
                }
                else
                str+= alphabets[(int)(s[i] - '0')];
            }
            else
                str+= alphabets[(int)(s[i]-'0')];
        }
        return str;
    }
};

/* Things learnt
 ** To convert char to int , if they are numbers just subract them by '0' and convert to (int).
 ** One great advantage of c++ is that strings are mutable thus help in constructing the word.
*/