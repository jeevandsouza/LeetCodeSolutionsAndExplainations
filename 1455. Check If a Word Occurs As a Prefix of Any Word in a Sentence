1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence

Given a sentence that consists of some words separated by a single space, and a searchWord.

You have to check if searchWord is a prefix of any word in sentence.

Return the index of the word in sentence where searchWord is a prefix of this word (1-indexed).

If searchWord is a prefix of more than one word, return the index of the first word (minimum index). If there is no such word return -1.

A prefix of a string S is any leading contiguous substring of S.

Input: sentence = "i love eating burger", searchWord = "burg"
Output: 4
Explanation: "burg" is prefix of "burger" which is the 4th word in the sentence.

class Solution {
public:
    int isPrefixOfWord(string sentence, string searchWord) {
        int count =0;
        string words;
        stringstream ss(sentence);
        while(ss >> words)
        {
            count++;
            if(words.find(searchWord) == 0)
                return count;
        }
            return -1;
    }
};

/*Things learnt
**The above solution was a second attempt and the below one is the first attempt, above one is 100% better in time and the below only 8%.
** stringstream to break words and find to search for words.
** learnt how to use find a string in if condition  words[i].find(searchWord) != string::npos
** compare function can be used just to exactly comapre s1.compare(s2) or use to get prefix by compare(startidx,endidx,word)
if it returns 0 then then the prefix exists
** If we want to break the string with comma or space we can use getline along with stringstream as done below.

*/





class Solution {
public:
    int isPrefixOfWord(string sentence, string searchWord) {
        string s, tmp; 
        stringstream ss(sentence);
        vector<string> words;
       
        while(getline(ss, tmp, ' '))
             words.push_back(tmp);
        for(int i=0;i<words.size();i++)
        {
           // if(words[i].find(searchWord) != string::npos)
            if(words[i].compare(0, searchWord.size(), searchWord) == 0)
                return (i + 1);
        }
            return -1;
    }
};