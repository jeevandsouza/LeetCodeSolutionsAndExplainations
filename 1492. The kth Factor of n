1492. The kth Factor of n

Given two positive integers n and k.

A factor of an integer n is defined as an integer i where n % i == 0.

Consider a list of all factors of n sorted in ascending order, return the kth factor in this list or return -1 if n has less than k factors.

Input: n = 12, k = 3
Output: 3
Explanation: Factors list is [1, 2, 3, 4, 6, 12], the 3rd factor is 3.

class Solution {
public:
    int kthFactor(int n, int k) {
        vector<int>vec;
            int i=1;
        if(n==1 && k==1)
            return 1;
        else if(n==1)
            return -1;
        else
        {
        while(i != n)
        {
           if(n%i==0)
               vec.push_back(i);
            i++;
            if(k == vec.size())
                return vec[ vec.size()-1];
          }
        }
        if(k == vec.size()+1)
            return n;
        return -1;
        
        
    }
};

/* Things learnt
** Even though it shows c++ 100% better solution we can easily optimize this one approach that I tried was check if(n%2 !=0)
If it is not then it is a odd number and u can pretty much increment ur counter to i=1 and i+=2, which would reduce the worst case
to O(n/2).Also we can loop only until i = n/2 because it can't be greater than that.
*/

