191. Number of 1 Bits

Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight).

Input: n = 00000000000000000000000000001011
Output: 3
Explanation: The input binary string 00000000000000000000000000001011 has a total of three '1' bits.

class Solution {
public:
    int hammingWeight(uint32_t n) {
        int num = __builtin_popcount(n);
        return num;
    }
};

/* Things learnt
** builtin popcount gives count of 1 , it is a inbuilt gcc function, which also has clz and ctz for trailing and leading zeros count.
**The other approach is to use bitset and count function.
** The thridc approach is using logical and function to count the recurrence
*/

class Solution {
public:
    int hammingWeight(uint32_t n) {
        return bitset<32>(n).count();
    }
}

class Solution {
public:
    int hammingWeight(uint32_t n) {
        int cnt=0;  // count of set bit
        while(n>0){  // iterate until all bits are traversed
			++cnt;
            n=n&(n-1); // change the first set bit from right to 0
        }
        return cnt;
    }
};