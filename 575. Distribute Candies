575. Distribute Candies

Alice has n candies, where the ith candy is of type candyType[i]. Alice noticed that she started to gain weight, so she visited 
a doctor.

The doctor advised Alice to only eat n / 2 of the candies she has (n is always even). Alice likes her candies very much, and she 
wants to eat the maximum number of different types of candies while still following the doctor's advice.

Given the integer array candyType of length n, return the maximum number of different types of candies she can eat if she only 
eats n / 2 of them.

class Solution {
public:
    int distributeCandies(vector<int>& candyType) {
        unordered_map<int,int>interim;
        for(int i=0;i<candyType.size();i++)
            interim[candyType[i]]++;
        if(interim.size() <= candyType.size()/2)
            return interim.size();
        return candyType.size()/2;
    }
};


/* things learnt
** Using hashing we can solve it in O(n) 
** We can use unordered_set just like maps and are faster unordered_set<string>s;
** operations that can be used are insert, find, end to check , we can use iterator to loop through
** one practical problem that can be solved is getting duplicates from the array.
*/